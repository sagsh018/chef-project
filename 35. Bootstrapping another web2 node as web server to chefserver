1) So finally here in this section we are going to bootstrap our second web server named web2 to the chef server
    and add that node to load balancer as well.
Note :: When get time see the section in chef docs to automate the task of bootstrapping the node automatically When
the new node gets created.
2) So in this section we are going to do below tasks:
    a) Bootstrap a new node
    b) Update the runlist of the new node to include the web server cookbook 
    c) Run the chef-client on that system
    d) verify the node's web server is functional
3) So lets first go ahead and bootstrap our new node web2 
    # vagrant ssh-config web2
    # knife bootstrap localhost --ssh-port 2200 --ssh-user vagrant --identity-file /c/Users/Sagar/projects/chef/.vagrant/machines/web2/virtualbox/private
        _key --sudo -N web2 --run-list 'recipe[webserver]'
        So this command is going to do all three steps in one go
        a) bootstrap the node
        b) add the webserver cookbook  to the runlist of node web1
        c) converge the node web2 with the runlist on the very first chef-client run.
    # vagrant ssh web2
    # curl localhost
        This will show that our node is being converged with the webserver cookbook successfully
    # exit
    # knife node list
        This will return that now chef server has three nodes bootstrapped to it 
        we can see the same on chef manage under nodes option
    # knife node show web2
        This will show the runlist for web2
4) Now that we have bootstrapped our second web server web2 with chef server we have to add it to the load-balancer as well so that load-balancer
    node can then distribute the HTTP traffic coming to it.
    # open cookbooks/myhaproxy/recipe/default.rb and add the below line under haproxy_backend resource
        'web2 192.168.10.44:80 maxconn 32'
        after this update the metadata file with version to 0.1.3
    # cd cookbooks/myhaproxy
    # berks upload
    # vagrant ssh load-balancer
    # sudo chef-client
5) after converging the load-balancer with updated myhaproxy cookbook as above we can run curl localhost on 
    load-balancer and it will show us our request servered by different webserver everytime
    # vagrant ssh load-balancer
    # curl localhost
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset=" utf-8 ">
                <title>Web Server Main Page</title>
            </head>
            <body>
                <img src="my_image.png" srcset="my_image.png 2x">
                <h1>Hello Sagar..!</h1>
                <h2>This line is added to show example of notifies</h2>
                <h2>This line is added to show example of subscribes</h2>
                <h2>Hostname :: web1 </h2>
                <h2>IP Address :: 10.0.2.15 </h2>
            </body>
            </html>

    # curl localhost
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset=" utf-8 ">
                <title>Web Server Main Page</title>
            </head>
            <body>
                <img src="my_image.png" srcset="my_image.png 2x">
                <h1>Hello Sagar..!</h1>
                <h2>This line is added to show example of notifies</h2>
                <h2>This line is added to show example of subscribes</h2>
                <h2>Hostname :: web2 </h2>
                <h2>IP Address :: 10.0.2.15 </h2>
            </body>
            </html>
6) We can see the smae thing on our brower as well with the help of below URL
    http://localhost:9000/
    